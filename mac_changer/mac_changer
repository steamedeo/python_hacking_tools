#! usr/bin/env python

import subprocess
import optparse
import re


# function to get the arguments
def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option('-i', '--interface', dest='interface',
                      help='Interface for which you want to change the MAC address')
    parser.add_option('-m', '--mac', dest='new_mac', help='New MAC address')
    if not options.interface:
        parser.error('Please insert an interface.')
    if not options.new_mac:
        parser.error('Please insert a new MAC address.')
    return options


# function to change the MAC address
def change_mac(interface, new_mac):
    print("Changing MAC address for interface " + interface + " to " + new_mac)
    subprocess.call(['ifconfig', interface, 'down'])
    subprocess.call(['ifconfig', interface, 'hw', 'ether', new_mac])
    subprocess.call(['ifconfig', interface, 'up'])


# function to get current MAC address
def get_current_mac(interface):
    # check the MAC address has changed
    ifconfig_result = subprocess.check_output(['ifconfig', interface])
    mac_address_search_result = re.search(r'\w\w:\w\w:\w\w:\w\w:\w\w:\w\w', ifconfig_result)

    if mac_address_search_result:
        return mac_address_search_result.group(0)
    else:
        print('MAC address not found!')

# get user arguments
options = get_arguments()

# show current mac
current_mac = get_current_mac(options.interface])
print('Current MAC ' + str(current_mac))

# change mac
change_mac(options.interface, options.new_mac)

# get new mac
current_mac = get_current_mac(options.interface)

# compare and show result
if current_mac == options.new_mac:
    print('MAC address was changed to ' + current_mac)
else:
    print('Could not change the MAC address')

